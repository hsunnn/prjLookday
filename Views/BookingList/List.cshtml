@* @model IEnumerable<prjLookday.ViewModels.CBookingListViewModel> *@
    @model X.PagedList.IPagedList<prjLookday.ViewModels.CBookingListViewModel>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

<nav style="background-color: rgb(225,223,218);">
    <h1 class="text-center mb-3">訂單管理</h1>
    <div >

        <div class="d-flex justify-content-md-center mb-3">
            <div class="col-md-2">
                <input class="form-control" type="text" name="txtKeyword" id="inputsearch" placeholder="搜尋訂單編號/客戶名稱" />
            </div>
            <div class="input-group-append">
                <button type="submit" onclick="getBooking()" class="btn btn-warning" id="searchButton">搜尋</button>
            </div>
            <div class="input-group-append">
                <button type="submit" id="allorders" onclick="allbookings()" class="btn btn-warning">全部訂單</button>
            </div>
        </div>
            <div class="d-flex justify-content-md-center mb-3">
        <div class="col-md-1">
            <input type="date" class="form-control" name="startDate" id="startdate" placeholder="開始日期" />
        </div>
        <div class="col-md-1">
            <input type="date" class="form-control" name="endDate" id="enddate" placeholder="結束日期" />
        </div>
        <div class="col-md-1">
            <button type="submit" id="searchdate" class="btn btn-warning" onclick="getdurationbookings()">搜尋</button>
        </div>
        </div>
       @*  <div class="input-group" style="justify-content:flex-end">
            <div style="display: flex">
                <input type="text" id="inputsearch" placeholder="搜尋訂單編號/客戶名稱" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm">
                <div class="input-group-append">
                    <button type="submit" onclick="getBooking()" class="btn btn-outline-secondary" id="searchButton">搜尋</button>
                </div>
                <div class="input-group-append">
                    <button type="submit" id="allorders" onclick="allbookings()" class="btn btn-outline-secondary">全部訂單</button>
                </div>
            </div>
        </div> *@

       @*  <div class="input-group" style="justify-content:flex-end">
            <div style="display: flex">
                <input type="date" id="startdate" />
                <input type="date" id="enddate" />
                <button id="searchdate" onclick="getdurationbookings()" class="btn btn-outline-secondary">搜尋</button>
            </div>
        </div> *@
        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">訂單狀態</button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                <li><a class="dropdown-item" href="#" id="complete">已完成付款</a></li>
                <li><a class="dropdown-item" href="#" id="shoppingchart">購物車</a></li>
                <li><a class="dropdown-item" href="#" id="collect">收藏</a></li>
            </ul>
        </div>

     



    </div>


    <table id="bookingsTable" border="1" class="table table-hover table-sm table-bordered rounded text-center" style="background-color:white; color:dimgray">
        <!--style="text-align: center;-->
        <thead>
            <tr style="color:white; background-color:darkorange; text-align:center">
                <th style="width: 3%;">序號</th>
                <th style="width: 3%;">訂單編號</th>
                <th style="width: 3%;">訂單日期</th>
                <th style="width: 10%;">客戶資訊</th>
                <th style="width: 10%;">活動資訊</th>
                <th style="width: 5%;">金額</th>
                <th style="width: 5%;">訂單狀態</th>
            </tr>
        </thead>
        <tbody>
          @*   <tr id="loading-indicator">
                <td colspan="12" scope="row"> loading........</td>
            </tr>
    *@
            @{
                int count = 0;
                //int count = (Model.PageNumber - 1) * Model.PageSize;
                foreach (var bookings in Model)
                {
                    count++;
                    <tr id ="loading-indicator">
                        <td scope="row">@count</td>
                        <td scope="row">@bookings.BookingId</td>
                        <td scope="row">@bookings.BookingDate?.ToString("yyyy/M/d")</td>
                        <td scope="row">@bookings.UserName</td>
                        <td scope="row">@bookings.ActivityName</td>
                        <td scope="row">@bookings.Price</td>
                        <td scope="row">@bookings.bookingStatus</td>
                    </tr>
                
                }
            } 
             
            <!-- 添加JavaScript的資料 -->
        </tbody>
    </table>
</nav>
@* 頁面按鈕 *@
@* <div class="d-flex justify-content-center">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("List", new { page }))
</div> *@

<div id="pagination" class="d-flex justify-content-center">
    <button id="prevPage" class="btn btn-warning mx-2">上一頁</button>
    <span id="pageInfo" class="mx-2"></span>
    <button id="nextPage" class="btn btn-warning mx-2">下一頁</button>
</div>
@section Styles {
    <style>
        #activitytable {
            display: none;
        }

        #bookingsTable tbody tr {
            height: 50px; /* 調整這裡的數值來設置行高 */
        }

        #bookingsTable th, #bookingsTable td {
            vertical-align: middle; /* 垂直置中單元格內容 */
        }

    </style>
}

@section Scripts {
    <script>
        let bookingData = [];  //儲存所有預定數據

        // async function loadBookings() {
        //     const response = await fetch('/api/BookingOrder');
        //     const data = await response.json();
        //     bookingData = data;
        //      //populateTable(bookingData);
        // }

        // function populateTable(data) {
        //     //getElementsByTagName會將 < tbody > 裡面的內容，丟進 tableBody 變數當中
        //     const tableBody = document.getElementById('bookingsTable').getElementsByTagName('tbody')[0];
        //     tableBody.innerHTML = ''; // 清空原先資料

        //     //每次索引都從0開始
        //     let index = 0;

        //     data.forEach((data) => {
        //         if (data.bookingStatus === "已完成付款") {
        //             const row = tableBody.insertRow();
        //             row.insertCell(0).innerHTML = index + 1;
        //             row.insertCell(1).innerText = data.bookingId;
        //             row.insertCell(2).innerText = new Date(data.bookingDate).toLocaleDateString(); //用于将日期对象转换为特定语言格式的日期字符串。它可以根据本地语言环境（Locale）来格式化日期，提供了一种简便的方法来显示用户友好的日期格式。
        //             row.insertCell(3).innerHTML = data.userDisplay;
        //             row.insertCell(4).innerHTML = data.activityDisplay;
        //             row.insertCell(5).innerText = `$${Math.floor(data.price).toLocaleString('en-US')}`;
        //             row.insertCell(6).innerText = data.bookingStatus;
        //             index++;
        //         }
        //             });
        // }

        let currentPage = 1;
        const pageSize = 10;
        let currentBookingStatus = "已完成付款";

        async function loadBookings() {
            const response = await fetch('/api/BookingOrder');
            const data = await response.json();
            //bookingData = data.filter(data => data.bookingStatus === "已完成付款");
            filterBookingData(data);
            populateTable();
            updatePageInfo();
        }

        function filterBookingData(data) {
            bookingData = data.filter(data => data.bookingStatus === currentBookingStatus);
        }

        function populateTable() {
            const tableBody = document.getElementById('bookingsTable').getElementsByTagName('tbody')[0];
            tableBody.innerHTML = ''; // 清空原先資料

            const startIndex = (currentPage - 1) * pageSize;
            const endIndex = startIndex + pageSize;
            const pageData = bookingData.slice(startIndex, endIndex);

            pageData.forEach((data, index) => {
                const row = tableBody.insertRow();
                row.insertCell(0).innerHTML = startIndex + index + 1;
                row.insertCell(1).innerText = data.bookingId;
                row.insertCell(2).innerText = new Date(data.bookingDate).toLocaleDateString();
                row.insertCell(3).innerHTML = data.userDisplay;
                row.insertCell(4).innerHTML = data.activityDisplay;
                row.insertCell(5).innerText = `$${Math.floor(data.price).toLocaleString('en-US')}`;
                row.insertCell(6).innerText = data.bookingStatus;
            });
        }

        function updatePageInfo() {
            const pageInfo = document.getElementById('pageInfo');
            const totalPage = Math.ceil(bookingData.length / pageSize);
            pageInfo.innerText = `Page ${currentPage} of ${totalPage}`;
            document.getElementById('prevPage').disabled = currentPage === 1;
            document.getElementById('nextPage').disabled = currentPage === totalPage;
        }

        document.getElementById('prevPage').addEventListener('click', () => {
            if (currentPage > 1) {
                currentPage--;
                populateTable();
                updatePageInfo();
            }
        });

        document.getElementById('nextPage').addEventListener('click', () => {
            const totalPage = Math.ceil(bookingData.length / pageSize);
            if (currentPage < totalPage) {
                currentPage++;
                populateTable();
                updatePageInfo();
            }
        });

        function switchBookingStatus(status) {
            currentBookingStatus = status;
            loadBookings();
        }







        //已完成付款
        document.getElementById('complete').addEventListener('click', async () => {
            console.log(complete);
            document.getElementById('dropdownMenuButton1').innerHTML = "已完成付款";
           //populateTable(bookingData);
            loadBookings();
        });

        //購物車
        async function cartbookings() {
            const response = await fetch('/api/BookingOrder');
            const data = await response.json();
           // bookingData = data.filter(data => data.bookingStatus === "購物車");
            filterBookingData(data);
           populateTable();
            updatePageInfo();
        }
        // // // function shoppingchartTable(data) {
        // // //     //getElementsByTagName會將 < tbody > 裡面的內容，丟進 tableBody 變數當中
        // // //     const tableBody = document.getElementById('bookingsTable').getElementsByTagName('tbody')[0];
        // // //     tableBody.innerHTML = ''; // 清空原先資料
        // // //     //const btncell = document.createElement("button");

        // // //     let index = 0;

        // // //     data.forEach((data) => {
        // // //         if (data.bookingStatus === "購物車") {
        // // //             const row = tableBody.insertRow();
        // // //             row.insertCell(0).innerHTML = index + 1;
        // // //             row.insertCell(1).innerText = data.bookingId;
        // // //             row.insertCell(2).innerText = new Date(data.bookingDate).toLocaleDateString(); //用于将日期对象转换为特定语言格式的日期字符串。它可以根据本地语言环境（Locale）来格式化日期，提供了一种简便的方法来显示用户友好的日期格式。
        // // //             //row.insertCell(3).innerHTML = data.UserName;
        // // //             row.insertCell(3).innerHTML = data.userDisplay;
        // // //             row.insertCell(4).innerHTML = data.activityDisplay;
        // // //             row.insertCell(5).innerText = `$${Math.floor(data.price).toLocaleString('en-US')}`;
        // // //             row.insertCell(6).innerText = data.bookingStatus;
        // // //             index++;
        // // //         }
               
        // // //     });
        // // // };


        document.getElementById("shoppingchart").addEventListener('click', () => {
            console.log(shoppingchart);
            document.getElementById('dropdownMenuButton1').innerHTML = "購物車";
            //shoppingchartTable(bookingData);
           // cartbookings();
            switchBookingStatus("購物車");
        });

        //收藏
        async function collectbookings() {
            const response = await fetch('/api/BookingOrder');
            const data = await response.json();
           // bookingData = data.filter(data => data.bookingStatus === "購物車");
            filterBookingData(data);
            populateTable();
            updatePageInfo();
        }
        // // function collectTable(data) {
        // //     //getElementsByTagName會將 < tbody > 裡面的內容，丟進 tableBody 變數當中
        // //     const tableBody = document.getElementById('bookingsTable').getElementsByTagName('tbody')[0];
        // //     tableBody.innerHTML = ''; // 清空原先資料
        // //     //const btncell = document.createElement("button");

        // //     let index = 0;
        // //     data.forEach((data) => {
        // //         if (data.bookingStatus === "收藏") {
        // //             const row = tableBody.insertRow();
        // //             row.insertCell(0).innerHTML = index + 1;
        // //             row.insertCell(1).innerText = data.bookingId;
        // //             row.insertCell(2).innerText = new Date(data.bookingDate).toLocaleDateString(); //用于将日期对象转换为特定语言格式的日期字符串。它可以根据本地语言环境（Locale）来格式化日期，提供了一种简便的方法来显示用户友好的日期格式。
        // //             row.insertCell(3).innerHTML = data.userDisplay;
        // //             row.insertCell(4).innerHTML = data.activityDisplay;
        // //             row.insertCell(5).innerText = `$${Math.floor(data.price).toLocaleString('en-US')}`;
        // //             row.insertCell(6).innerText = data.bookingStatus;
        // //             index++;
        // //         }         
        // //     });
        // // };


        document.getElementById("collect").addEventListener('click', () => {
            console.log(collect);
            document.getElementById('dropdownMenuButton1').innerHTML = "收藏";
            //collectTable(bookingData);
            //collectbookings();
            switchBookingStatus("收藏");
        });

        //搜尋訂單編號/客戶姓名
        async function getBooking() {
            const search = document.getElementById('inputsearch').value.trim();
            if (!search) {
                alert("請輸入訂單編號或用戶名稱");
                return;
            }

            let url;
            if (isNaN(search)) {
                //如果不是數字 就會判定為用戶名
                url = `/api/BookingOrder/ByUsername/${encodeURIComponent(search)}`;
            } else {
                //如果是數字就判定是訂單編號
                url = `/api/BookingOrder/ById/${search}`;

            }

            try {
                const response = await fetch(url);
                if (!response.ok) {
                    throw new Error("HTTP error! status:${response.status}");
                }

                const data = await response.json();
                if (Array.isArray(data)) {
                    populateTable();  // For username search
                }
                else {
                    populateTable([]);  // For ID search
                }
            }
            catch (error) {
                console.log('Error fetching data:', error);
                alert('找不到該訂單或用戶');
            }

        }

        //顯示全部訂單資料
        document.getElementById("allorders").addEventListener('click', () => {
            //populateTable(bookingData);
            loadBookings()
        });

        //顯示日期區間內資料
        async function getdurationbookings() {
            const startDate = document.getElementById("startdate").value;
            const endDate = document.getElementById("enddate").value;

            if (!startDate || !endDate) {
                alert("請選擇完整日期區間");
                return;
            }

            if (document.getElementById('dropdownMenuButton1').innerHTML === "已完成付款") {
                populateTable(bookingData);
                console.log("1111111111111111111");
            }
            else if (document.getElementById('dropdownMenuButton1').innerHTML === "購物車") {
                shoppingchartTable(bookingData);
                console.log("222222222222222222");
            }
            else if (document.getElementById('dropdownMenuButton1').innerHTML === "收藏") {
                collectTable(bookingData);
                console.log("3333333333333333333");
            }
            else { }


            const url = `https://localhost:7221/api/filter/activitydate?startDate=${encodeURIComponent(startDate)}&endDate=${encodeURIComponent(endDate)}`;

            const response = await fetch(url);
            console.log(response);
            if (!response.ok) {
                alert('找不到該日期的訂單');
                return;
            }
            const data = await response.json();

            //顯示table
            document.getElementById('bookingsTable').style.display = 'table';
            datetable(data);
        }

        function datetable(data) {
            const tablebody = document.getElementById('bookingsTable').getElementsByTagName('tbody')[0];
            tablebody.innerHTML = '';     //清空原始數據


            data.forEach((data, index) => {
                const row = tablebody.insertRow();
                row.insertCell(0).innerHTML = index + 1;
                row.insertCell(1).innerText = data.bookingId;
                row.insertCell(2).innerText = new Date(data.bookingDate).toLocaleDateString(); //用于将日期对象转换为特定语言格式的日期字符串。它可以根据本地语言环境（Locale）来格式化日期，提供了一种简便的方法来显示用户友好的日期格式。
                row.insertCell(3).innerHTML = data.userDisplay;
                row.insertCell(4).innerHTML = data.activityDisplay;
                row.insertCell(5).innerText = `$${Math.floor(data.price).toLocaleString('en-US')}`;
                row.insertCell(6).innerText = data.bookingStatus;
            });
        }

        //一載入頁面 就顯示資料
        window.onload = loadBookings;
    </script>
}

               